@model project3.Models.Profile

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section AddCss{
    @Styles.Render("~/Bundle/profile")
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Bundles/Scripts/profile")
}

<div class="modal fade" id="Modal_Update_Success" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">Notification</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h4 class="ml-4">
                    Successfully updated your profile 
                </h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="Modal_Change_Password_Success" data-value="@ViewBag.ChangePassword" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel">Notification</h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h4 class="ml-4">
                    Change password success
                </h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>
<div class="infor-title">
    <div class="container">
        <div class="title">
            <h3 class="title-name">
                Rosebud
            </h3>
            <h2 class="title-sub">
                Your Profile
            </h2>
        </div>
    </div>
</div>

<section class="address" id="Customer_Information" data-value="@ViewBag.Update">
    <div class="container">
        <div class="address__box">
            <div class="address__item">
                @using (Html.BeginForm("Index", "Profile", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Change Your Profile</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.customerInfor.Email, htmlAttributes: new { @class = "control-label col-md-2"})
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.customerInfor.Email, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })
                                @Html.ValidationMessageFor(model => model.customerInfor.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.customerInfor.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.customerInfor.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.customerInfor.FirstName, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.customerInfor.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.customerInfor.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.customerInfor.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.customerInfor.Birth, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.customerInfor.Birth, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.customerInfor.Birth, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.customerInfor.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.customerInfor.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.customerInfor.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.customerInfor.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.customerInfor.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.customerInfor.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.customerInfor.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.customerInfor.Role, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.customerInfor.Role, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-dark" })
                                <input type="submit" value="Save" class="btn btn-info" />
                            </div>
                        </div>
                    </div>
                }

            </div>
            <div class="address__item">
                @using (Html.BeginForm(Html.BeginForm("ChangePassword", "Profile", FormMethod.Post)))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Change Your Password</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.password.CurrentPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.password.CurrentPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.password.CurrentPassword, "", new { @class = "text-danger" })
                                <p class="text-danger"> @ViewBag.ErrorMessage</p>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model =>  model.password.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.password.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.password.NewPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.password.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.password.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.password.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                @Html.ActionLink("Back to List", "Index",null, new { @class="btn btn-dark" })
                                <input type="submit" value="Save" class="btn btn-info" />
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</section>
<script>
    document.querySelector(".header").classList.add("active");

</script>
